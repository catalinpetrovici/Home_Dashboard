version: '3.9'

services:
  # home-react-frontend-app:
  #   build: ./frontend
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./react/:/app
  #   environment:
  #     - NODE_ENV=production
  #   restart: unless-stopped
  #   networks:
  #     - backend
  #     - frontend

  home-express-backend-app:
    container_name: home-express-backend-app
    build:
      context: ./backend
      target: dev
    depends_on:
      home-db-redis-app:
        condition: service_healthy
      home-db-postgres-app:
        condition: service_healthy
    ports:
      - 3000:3000
    volumes:
      - ./express/:/usr/src/app
    env_file:
      - express.env
    networks:
      - backend
      - frontend

  home-db-redis-app:
    container_name: home-db-redis-app
    image: arm64v8/redis:6.0-bullseye
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/data:/var/lib/redis/data
    networks:
      - backend
    command: /bin/sh -c "redis-server --save 20 1 --requirepass $$REDIS_HOST_PASSWORD"
    env_file:
      - redis.env
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  home-db-postgres-app:
    container_name: home-db-postgres-app
    image: postgres:15.1-bullseye
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    networks:
      - backend
    env_file:
      - postgre.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

networks:
    backend:
    frontend: